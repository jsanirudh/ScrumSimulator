/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.scrumsimulator;

import java.awt.Component;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Eshwar Gulupalli
 */
public class ScrumBoard extends javax.swing.JFrame {

    /**
     * Creates new form ScrumBoard
     */
    public ScrumBoard() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        scrumBoardTable = new javax.swing.JTable();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        FetchBtn = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        HiddenLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        scrumBoardTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][] {
                        { null, null, null, null },
                        { null, null, null, null },
                        { null, null, null, null },
                        { null, null, null, null },
                        { null, null, null, null },
                        { null, null, null, null },
                        { null, null, null, null },
                        { null, null, null, null },
                        { null, null, null, null },
                        { null, null, null, null },
                        { null, null, null, null }
                },
                new String[] {
                        "New", "In Progress", "Done", "Blocker"
                }));
        jScrollPane1.setViewportView(scrumBoardTable);

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        jLabel7.setText("SCRUM SIMULATOR");
        jLabel7.setAlignmentY(0.0F);

        jButton1.setText("Back");
        jButton1.setToolTipText("");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        FetchBtn.setText("Fetch");
        FetchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FetchBtnActionPerformed(evt);
            }
        });

        jButton3.setText("Save Sprint Board State");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        HiddenLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        HiddenLabel.setText(" ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 419,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                        Short.MAX_VALUE)
                                                                .addComponent(jButton3))
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGap(18, 18, 18)
                                                                .addGroup(layout.createParallelGroup(
                                                                        javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(layout.createSequentialGroup()
                                                                                .addComponent(FetchBtn)
                                                                                .addPreferredGap(
                                                                                        javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                        Short.MAX_VALUE)
                                                                                .addComponent(jButton1))
                                                                        .addComponent(jScrollPane1,
                                                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                622,
                                                                                javax.swing.GroupLayout.PREFERRED_SIZE))))
                                                .addGap(0, 26, Short.MAX_VALUE)))
                                .addGap(0, 10, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jSeparator2)
                                .addContainerGap())
                        .addComponent(HiddenLabel, javax.swing.GroupLayout.DEFAULT_SIZE,
                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 27,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 208,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(FetchBtn)
                                        .addComponent(jButton1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(HiddenLabel)
                                        .addComponent(jButton3))
                                .addGap(25, 25, 25)));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        RefinedBacklogScreen r = new RefinedBacklogScreen();
        r.setVisible(true);
        dispose();
    }// GEN-LAST:event_jButton1ActionPerformed

    private void FetchBtnActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_FetchBtnActionPerformed
        // TODO add your handling code here:

        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://sql3.freesqldatabase.com:3306/sql3659139",
                    "sql3659139", "ZD2nzaxCwN");
            String New_status = "New";
            String ip_status = "In Progress";
            String done_status = "Done";
            String blocker_status = "Blocker";
            String query = "select * from UserStories where status = ?";
            String query2 = "select * from UserStories where status = ?";
            String query3 = "select * from UserStories where status = ?";
            String query4 = "select * from UserStories where status = ?";

            String ID, Status, Title;
            DefaultTableModel model = (DefaultTableModel) scrumBoardTable.getModel();
            model.setRowCount(0);
            PreparedStatement st = con.prepareStatement(query);
            st.setString(1, New_status);
            ResultSet rs = st.executeQuery();

            // System.out.println(rs.getString(1)+" "+rs.getString(2)+" "+rs.getString(3)+"
            // "+rs.getString(4)+
            // " "+rs.getString(5)+" "+rs.getString(6)+" "+rs.getString(7)+"
            // "+rs.getString(8));
            /*
             * System.out.println("ID is "+ rs.getString(1)+
             * ", Status is "+ rs.getString(2)+
             * ", Title is "+ rs.getString(4));
             */
            while (rs.next()) {
                ID = rs.getString(1);
                Title = rs.getString(4);
                String[] row = { "<html>" + ID + "<br>" + Title + "</html>", null, null, null };
                model.addRow(row);
            }

            PreparedStatement st2 = con.prepareStatement(query2);
            st2.setString(1, ip_status);
            ResultSet rs2 = st2.executeQuery();
            while (rs2.next()) {
                System.out.println("ID is " + rs2.getString(1) +
                        ", Status is " + rs2.getString(2) +
                        ", Title is " + rs2.getString(4));

                ID = rs2.getString(1);
                Status = rs2.getString(2);
                Title = rs2.getString(4);
                String[] row = { null, "<html>" + ID + "<br>" + Title + "</html>", null, null };
                model.addRow(row);
            }

            PreparedStatement st3 = con.prepareStatement(query3);
            st3.setString(1, done_status);
            ResultSet rs3 = st3.executeQuery();
            while (rs3.next()) {
                System.out.println("ID is " + rs3.getString(1) +
                        ", Status is " + rs3.getString(2) +
                        ", Title is " + rs3.getString(4));
                ID = rs3.getString(1);
                Status = rs3.getString(2);
                Title = rs3.getString(4);
                String[] row = { null, null, "<html>" + ID + "<br>" + Title + "</html>", null };
                model.addRow(row);
            }

            PreparedStatement st4 = con.prepareStatement(query4);
            st4.setString(1, blocker_status);
            ResultSet rs4 = st4.executeQuery();
            while (rs4.next()) {
                System.out.println("ID is " + rs4.getString(1) +
                        ", Status is " + rs4.getString(2) +
                        ", Title is " + rs4.getString(4));
                ID = rs4.getString(1);
                Status = rs4.getString(2);
                Title = rs4.getString(4);
                String[] row = { null, null, "<html>" + ID + "<br>" + Title + "</html>", null };
                model.addRow(row);
            }

            for (int row = 0; row < scrumBoardTable.getRowCount(); row++) {
                int rowHeight = scrumBoardTable.getRowHeight(row);
                for (int column = 0; column < scrumBoardTable.getColumnCount(); column++) {
                    Component comp = scrumBoardTable.prepareRenderer(scrumBoardTable.getCellRenderer(row, column), row,
                            column);
                    rowHeight = Math.max(rowHeight, comp.getPreferredSize().height);
                }
                scrumBoardTable.setRowHeight(row, rowHeight);
            }
            st.close();
            con.close();

            // con.close();

        } catch (SQLException e) {
            System.out.println(e);
        }
    }// GEN-LAST:event_FetchBtnActionPerformed

    public void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:

        try {
            Connection con11 = DriverManager.getConnection("jdbc:mysql://sql3.freesqldatabase.com:3306/sql3659139",
                    "sql3659139", "ZD2nzaxCwN");

            DefaultTableModel model = (DefaultTableModel) scrumBoardTable.getModel();
            int rowCount = model.getRowCount();

            String clearQuery = "DELETE FROM IntStateSprint";
            PreparedStatement clearStatement = con11.prepareStatement(clearQuery);
            clearStatement.executeUpdate();

            for (int i = 0; i < rowCount; i++) {

                Object[] rowData = new Object[model.getColumnCount()];
                for (int j = 0; j < model.getColumnCount(); j++) {
                    rowData[j] = model.getValueAt(i, j);
                }

                String insertQuery = "INSERT INTO IntStateSprint (New, InProgress, Done, Blocker) VALUES (?, ?, ?, ?)";
                PreparedStatement insertStatement = con11.prepareStatement(insertQuery);

                for (int k = 0; k < rowData.length; k++) {
                    insertStatement.setObject(k + 1, rowData[k]);
                }

                insertStatement.executeUpdate();
            }

            HiddenLabel.setText("Saved the Current State of Sprint board");

            con11.close();

        } catch (Exception ex) {
            ex.printStackTrace();

        }

    }// GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
//        // (optional) ">
//        /*
//         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
//         * look and feel.
//         * For details see
//         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(ScrumBoard.class.getName()).log(java.util.logging.Level.SEVERE, null,
//                    ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(ScrumBoard.class.getName()).log(java.util.logging.Level.SEVERE, null,
//                    ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(ScrumBoard.class.getName()).log(java.util.logging.Level.SEVERE, null,
//                    ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(ScrumBoard.class.getName()).log(java.util.logging.Level.SEVERE, null,
//                    ex);
//        }
//        // </editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new ScrumBoard().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton FetchBtn;
    private javax.swing.JLabel HiddenLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator2;
    public javax.swing.JTable scrumBoardTable;
    // End of variables declaration//GEN-END:variables
}
